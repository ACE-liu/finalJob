一次基本的RTSP操作过程:

http://blog.csdn.net/ww506772362/article/details/52609379

当 RTP 通过 TCP 和 RTSP 消息交错传输时, 必须在 RTP 包前加 4 个字节长度的头, 它的结构如下:

BYTE  必须是 “$” or 0x24
BYTE  Channel id ，在 SETUP 消息中 Transport 头字段中 interleaved 参数指定.
WORD  数据包的长度（从接下来的数据开始算起, 不包括这 4 个字节的头的长度）


首先，客户端连接到流服务器并发送一个RTSP描述命令（DESCRIBE）。
流服务器通过一个SDP描述来进行反馈，反馈信息包括流数量、媒体类型等信息。
客户端再分析该SDP描述，并为会话中的每一个流发送一个RTSP建立命令(SETUP)，RTSP建立命令告诉服务器客户端用于接收媒体数据的端口。流媒体连接建立完成后，
客户端发送一个播放命令(PLAY)，服务器就开始在UDP上传送媒体流（RTP包）到客户端。 在播放过程中客户端还可以向服务器发送命令来控制快进、快退和暂停等。
最后，客户端可发送一个终止命令(TERADOWN)来结束流媒体会话

---------------------------------------------------------------------------------------------------------
RTSP 客户端保活
就是当client与server建立好session后，是如何保证该session正在使用，不被删掉了噶？ 
       A1:  RTSP服务器与客户端之间的保活，有几种不同的做法。
    1. 首先，RTSP服务器对于每个客户端，都应该有一个超时定时器，一旦客户端超时，就将对应的会话删除。如果会话还活着，就应该一直刷新这个定时器，这就是保活。
    2. 根据客户端请求的传输方式的不同，保活的方法也不同。对于TCP传输方式，服务器需要在每次向客户端成功传输一个数据包之后刷新超时定时器。
   3. 对于udp传输方式，服务器发出的数据包，并不知道客户端是否成功接收。标准的做法是在服务器每次收到客户端的RTCP包（receiver report）之后刷新超时定时器。但是有些客户端软件并不会发送receiver report，而是定期向服务器发送OPTIONS或GET_PARAMETER或SET_PARAMETER，那么服务器在收到这些消息时也需要刷新超时定时器。


NALU 头由一个字节组成, 它的语法如下:
      +---------------+
      |0|1|2|3|4|5|6|7|
      +-+-+-+-+-+-+-+-+
      |F|NRI|  Type   |
      +---------------+
F: 1 个比特.
  forbidden_zero_bit. 在 H.264 规范中规定了这一位必须为 0.
 nal_ref_idc. 取 00 ~ 11, 似乎指示这个 NALU 的重要性, 如 00 的 NALU 解码器可以丢弃它而不影响图像的回放. 不过一般情况下不太关心

   RTP(Real-time Transport Protocol)是用于Internet上针对多媒体数据流的一种传输协议。RTP被定义为在一对一或一对多的传输情况下工作。其目的是提供时间信息和实现流同步


